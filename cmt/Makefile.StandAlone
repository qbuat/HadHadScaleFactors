# Author: Noel Dawe (Noel.Dawe@cern.ch)
# David Rousseau : fix to generate separate *Cxx files


# --- External configuration ----------------------------------
ifeq ($(wildcard $(ROOTSYS)/test/Makefile.arch),)
    include $(ROOTSYS)/etc/Makefile.arch
else
    include $(ROOTSYS)/test/Makefile.arch
endif

# -------------------------------------------------------------
# General flags
# -------------------------------------------------------------
OUTPUTDIR  = .
SRCDIR     = ../Root
HDIR       = ../HadHadScaleFactors
PACKAGE    = HadHadScaleFactors


MFLAGS     = -MM -Wall -W -Woverloaded-virtual
INCLUDES   += -I$(HDIR) -I../

# -------------------------------------------------------------
# ROOT Cint
# -------------------------------------------------------------
LDEFFILE   = $(SRCDIR)/LinkDef.h

SRC        = HadHadScaleFactors.cxx
SOURCES    = $(addprefix $(SRCDIR)/,$(SRC))
HDR   	   = $(patsubst %.cxx,%.h,$(SRC))
HEADERS    = $(addprefix $(HDIR)/,$(HDR))
OBJECTS    = $(patsubst %.cxx,%.o,$(SOURCES))
DEPS       = $(patsubst %.h,%.d,$(HEADERS))
CINTFILEHS = $(patsubst %.cxx,%Cint.h,$(SRC))
CINTFILES = $(patsubst %Cint.h,%Cint.cxx,$(CINTFILEHS))
CINTOBJS = $(patsubst %Cint.cxx,%Cint.o,$(CINTFILES))


# -------------------------------------------------------------
# Libraries
# -------------------------------------------------------------
SHLIBFILE  = $(OUTPUTDIR)/lib$(PACKAGE).so

# -------------------------------------------------------------
# Compilation
# -------------------------------------------------------------

default: shlib

# keep debug symbols (can also put -O0 to avoid optimisation)
CXXFLAGS += -g 

# Implicit rule making all dependency Makefiles included at the end of this makefile
%.d : %.cxx $(HEADERS)
	@echo "Making $@"
	set -e; $(CC) $(MFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $< \
		| awk '{ sub("^$(notdir $*).o:","$*.o $@:") ; print }' > $@ ;\
		[ -s $@ ] || rm -f $@

%.d : %.C $(HEADERS)
	@echo "Making $@"
	set -e; $(CC) $(MFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $< \
		| awk '{ sub("^$(notdir $*).o:","$*.o $@:") ; print }' > $@ ;\
		[ -s $@ ] || rm -f $@

# Implicit rule to compile all classes
%.o : %.cxx $(HEADERS)
	@echo "Compiling $<"
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $*.o 

%.o : %.C
	@echo "Compiling .C $<"
	@$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $*.o 


# Rule to make ROOTCINT output file
$(CINTOBJS) : $(HEADERS) $(LDEFFILE) 
	@echo "Running rootcint"
	$(ROOTSYS)/bin/rootcint -f $(CINTFILES) -c -p  $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $(HEADERS) $(LDEFFILE)
	@echo "Compiling $(CINTFILES)"
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $(CINTFILES) -o $@



# Rule to make ROOTCINT *Cint.cxx
#%Cint.cxx : %.h 
#	@echo "Running rootcint on $<"
#	# do not use LinkDef.h
#	# $(ROOTSYS)/bin/rootcint -f $(patsubst %.h,%Cint.cxx,$<) -c -p  $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $< $(LDEFFILE)
#	@$(ROOTSYS)/bin/rootcint -f $(patsubst %.h,%Cint.cxx,$<) -c -p  $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $<



# Rule to combine objects into a shared library
$(SHLIBFILE) : $(OBJECTS) $(CINTOBJS)
	@echo "Linking $@"
	@mkdir -p $(OUTPUTDIR)
	@rm -f $@
	$(LD) $(CXXFLAGS) $(SOFLAGS) $(LIBS) $(EXTRALDFLAGS) $(OBJECTS) $(CINTOBJS) -o $@
	@rm -f $(OUTPUTDIR)/$(PACKAGE)Lib.so
	@ln -s $@ $(OUTPUTDIR)/$(PACKAGE)Lib.so

# $(PROG) : $(TESTDIR)/$(PROG).o $(OBJECTS) $(CINTOBJS)
# 	@echo "Building $@"
# 	$(CXX) -o $@ $(LIBS) $(TESTDIR)/$(PROG).o $(OBJECTS) $(CINTOBJS)

# $(UTIL) : $(UTILDIR)/$(UTIL).o $(OBJECTS) $(CINTOBJS)
# 	@echo "Building $@"
# 	$(CXX) -o $@ $(LIBS) $(UTILDIR)/$(UTIL).o $(OBJECTS) $(CINTOBJS)

cint: $(CINTOBJS)
shlib: $(SHLIBFILE)
# test: $(PROG)	
# 	./$(PROG)
all: cint shlib
# all: $(PROG) test
clean:
	@rm -f $(OUTPUTDIR)/*.o $(SRCDIR)/*.o $(OUTPUTDIR)/*.d $(OUTPUTDIR)/*.so
	#	@rm -f $(OUTPUTDIR)/*.o $(SRCDIR)/*.o $(TESTDIR)/*.o $(OUTPUTDIR)/*.d $(OUTPUTDIR)/*.so
	#@rm -f $(PROG)
	@rm -f $(OUTPUTDIR)/AutoDict_* $(OUTPUTDIR)/*.pcm
	@rm -f $(CINTFILES) $(CINTFILEHS) 

-include $(DEPS)
